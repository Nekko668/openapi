import{_ as a,c as e,o as n,a6 as s}from"./chunks/framework.CrBHAFc5.js";const b=JSON.parse('{"title":"Android","description":"","frontmatter":{},"headers":[],"relativePath":"docs/sdk/Android.md","filePath":"docs/sdk/Android.md","lastUpdated":1715742262000}'),p={name:"docs/sdk/Android.md"},i=s(`<h1 id="android" tabindex="-1">Android <a class="header-anchor" href="#android" aria-label="Permalink to &quot;Android&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>本文档介绍了如何在Android上运行OpenAPI。</p><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><h3 id="安装openapi" tabindex="-1">安装OpenAPI <a class="header-anchor" href="#安装openapi" aria-label="Permalink to &quot;安装OpenAPI&quot;">​</a></h3><p>在Android嵌入式系统上运行OpenAPI，首先需要安装OpenAPI。</p><h4 id="下载openapi" tabindex="-1">下载OpenAPI <a class="header-anchor" href="#下载openapi" aria-label="Permalink to &quot;下载OpenAPI&quot;">​</a></h4><p>OpenAPI的下载地址为：<a href="https://github.com/OpenAPITools/openapi-generator/releases/latest" target="_blank" rel="noreferrer">https://github.com/OpenAPITools/openapi-generator/releases/latest</a></p><h4 id="解压openapi" tabindex="-1">解压OpenAPI <a class="header-anchor" href="#解压openapi" aria-label="Permalink to &quot;解压OpenAPI&quot;">​</a></h4><p>下载完成后，解压OpenAPI压缩包，得到OpenAPI的目录。</p><h4 id="配置环境变量" tabindex="-1">配置环境变量 <a class="header-anchor" href="#配置环境变量" aria-label="Permalink to &quot;配置环境变量&quot;">​</a></h4><p>在解压后的OpenAPI目录下，找到bin目录，将其添加到环境变量PATH中。</p><h4 id="测试openapi" tabindex="-1">测试OpenAPI <a class="header-anchor" href="#测试openapi" aria-label="Permalink to &quot;测试OpenAPI&quot;">​</a></h4><p>在命令行中输入<code>openapi-generator</code>命令，如果出现OpenAPI的帮助信息，则说明OpenAPI安装成功。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>openapi-generator</span></span>
<span class="line"><span>Usage: openapi-generator [OPTIONS] COMMAND [ARGS]...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  OpenAPI Generator CLI.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Options:</span></span>
<span class="line"><span>  --version             Show the version and exit.</span></span>
<span class="line"><span>  -h, --help            Show this message and exit.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Commands:</span></span>
<span class="line"><span>  config-help           Config help for chosen lang.</span></span>
<span class="line"><span>  generate              Generate code with chosen lang.</span></span>
<span class="line"><span>  help                  Show this message and exit.</span></span>
<span class="line"><span>  meta                  Meta command to manage templates.</span></span>
<span class="line"><span>  validate              Validate spec.</span></span></code></pre></div><h2 id="生成代码" tabindex="-1">生成代码 <a class="header-anchor" href="#生成代码" aria-label="Permalink to &quot;生成代码&quot;">​</a></h2><h3 id="下载openapi规范文件" tabindex="-1">下载OpenAPI规范文件 <a class="header-anchor" href="#下载openapi规范文件" aria-label="Permalink to &quot;下载OpenAPI规范文件&quot;">​</a></h3><p>OpenAPI规范文件是OpenAPI的核心，它定义了API的接口、数据模型、请求方法、响应状态码等。</p><p>OpenAPI规范文件下载地址：<a href="https://editor.swagger.io/" target="_blank" rel="noreferrer">https://editor.swagger.io/</a></p><h3 id="生成代码-1" tabindex="-1">生成代码 <a class="header-anchor" href="#生成代码-1" aria-label="Permalink to &quot;生成代码&quot;">​</a></h3><p>在命令行中，切换到OpenAPI的目录，输入以下命令生成代码：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>openapi-generator generate -i [OpenAPI规范文件路径] -g [目标语言] -o [生成代码的目录]</span></span></code></pre></div><p>例如，要生成Java代码，输入以下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>openapi-generator generate -i [OpenAPI规范文件路径] -g java -o [生成代码的目录]</span></span></code></pre></div><h3 id="编译代码" tabindex="-1">编译代码 <a class="header-anchor" href="#编译代码" aria-label="Permalink to &quot;编译代码&quot;">​</a></h3><p>生成代码后，需要编译代码，生成的Java代码需要通过Maven编译。</p><p>在命令行中，切换到生成代码的目录，输入以下命令编译代码：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mvn package</span></span></code></pre></div><p>编译完成后，会在生成代码的目录下生成target目录，里面包含编译后的Java代码。</p><h3 id="运行代码" tabindex="-1">运行代码 <a class="header-anchor" href="#运行代码" aria-label="Permalink to &quot;运行代码&quot;">​</a></h3><p>编译完成后，可以运行Java代码。</p><p>在命令行中，切换到生成代码的目录，输入以下命令运行代码：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>java -cp target/openapi-java-client-1.0.0.jar:[依赖jar包路径] [Main类名]</span></span></code></pre></div><p>例如，要运行Java代码，输入以下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>java -cp target/openapi-java-client-1.0.0.jar:lib/* com.example.demo.DemoApplication</span></span></code></pre></div><p>其中，<code>lib/*</code>是依赖jar包的路径，<code>com.example.demo.DemoApplication</code>是Main类名。</p><p>运行成功后，会在控制台输出OpenAPI的接口信息。</p><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><h3 id="依赖jar包" tabindex="-1">依赖jar包 <a class="header-anchor" href="#依赖jar包" aria-label="Permalink to &quot;依赖jar包&quot;">​</a></h3><p>生成代码时，OpenAPI会自动下载依赖jar包，并将其添加到生成代码的目录下的lib目录中。</p><p>如果下载失败，可以手动下载依赖jar包，并将其添加到lib目录中。</p><h3 id="安全问题" tabindex="-1">安全问题 <a class="header-anchor" href="#安全问题" aria-label="Permalink to &quot;安全问题&quot;">​</a></h3><p>在运行Java代码时，需要注意安全问题。</p><p>OpenAPI生成的代码中，可能存在安全漏洞，需要注意安全风险。</p>`,44),t=[i];function o(l,r,d,h,c,g){return n(),e("div",null,t)}const m=a(p,[["render",o]]);export{b as __pageData,m as default};
